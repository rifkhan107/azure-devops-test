trigger:
  branches:
    include:
      - main

jobs:
- job: Checkout
  displayName: 'Checkout'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - checkout: self

- job: Build
  displayName: 'Build'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: ./build.sh
      displayName: 'Build'

- job: UnitTests
  displayName: 'Unit Tests'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: ./run_unit_tests.sh
      displayName: 'Unit Tests'

- job: IntegrationTests
  displayName: 'Integration Tests'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: ./run_integration_tests.sh
      displayName: 'Integration Tests'

- job: StaticCodeAnalysis
  displayName: 'Static Code Analysis'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: ./run_static_code_analysis.sh
      displayName: 'Static Code Analysis'

- job: SecurityAnalysis
  displayName: 'Security Analysis'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: ./run_security_analysis.sh
      displayName: 'Security Analysis'

- job: PerformanceTests
  displayName: 'Performance Tests'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: ./run_performance_tests.sh
      displayName: 'Performance Tests'

- job: Package
  displayName: 'Package'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: ./package.sh
      displayName: 'Package'

- job: PublishArtifacts
  displayName: 'Publish Artifacts'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: ./publish_artifacts.sh
      displayName: 'Publish Artifacts'

- job: DeployToStaging
  displayName: 'Deploy to Staging'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: ./deploy_staging.sh
      displayName: 'Deploy to Staging'

- job: ManualApproval
  displayName: 'Manual Approval'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: ManualIntervention@8
      displayName: 'Manual Approval'
      inputs:
        instructions: 'Proceed to production?'

- job: DeployToProduction
  displayName: 'Deploy to Production'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: ./deploy_production.sh
      displayName: 'Deploy to Production'

- job: PostDeploymentTests
  displayName: 'Post-Deployment Tests'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: ./run_post_deployment_tests.sh
      displayName: 'Post-Deployment Tests'
